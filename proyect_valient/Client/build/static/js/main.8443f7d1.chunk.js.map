{"version":3,"sources":["Redux/actions.js","Constantes/Constans.js","components/CardsEpisode.jsx","components/Detail.jsx","components/Episodes.jsx","components/Card.jsx","imagenes/Lupa.svg","components/Home.jsx","components/CardsLocalization.jsx","components/Location.jsx","App.js","reportWebVitals.js","Redux/reducer.js","Store/index.js","index.js"],"names":["GET_CHARACTERS","GET_CHARACTERS_DETAILS","GET_CLEAN_CHARACTERS_DETAILS","GET_EPISODES","GET_EPISODE","GET_LOCATIONS","GET_LOCATION","getCharacters","dispatch","a","axios","get","BASE_URL","json","type","payload","data","console","log","getCharactersDetails","id","getCleanCharactersDetails","filterCharacters","getEpisodes","getEpisode","getLocations","getLocation","CardsEpisode","props","allCaracters","useSelector","state","charactersLoad","useDispatch","episode","arrayCharacters","characters","history","useHistory","match","params","useEffect","idCaracters","map","e","length","slice","filtrado","undefined","i","j","parseInt","push","personaje","filter","ele","pos","indexOf","className","name","src","image","alt","onClick","totalCurrent","Math","ceil","useState","currentPage","setCurrentPage","actualCurrent","setactualCurrent","nextPage","prevPage","Detail","detailCaracter","characterDetail","status","species","location","gender","Episodes","allEpisodes","episodes","to","Card","Home","characterAll","inputName","setInputName","inputRadio","setInputRadio","inputRadioStatus","setInputRadioStatus","show","filterData","toLowerCase","includes","handleRadiInput","target","handleRadiInputStatus","dataFilterEstadoGenero","imagen","placeholder","onChange","value","tabIndex","ch","arrayLocation","residents","idLocation","Location","allLocations","locations","App","path","exact","component","CardsLocalization","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","inicialState","copiaCharactersLoad","rootReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8443f7d1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  CHARACTERS_URL,\r\n  CHARACTERSID_URL,\r\n  EPISODE_URL,\r\n  LOCATION_URL,\r\n} from \"../Constantes/Constans\";\r\n\r\nexport const GET_CHARACTERS = \"GET_CHARACTERS\";\r\nexport const GET_CHARACTERS_DETAILS = \"GET_CHARACTERS_DETAILS\";\r\nexport const GET_CLEAN_CHARACTERS_DETAILS = \"GET_CLEAN_CHARACTERS_DETAILS\";\r\nexport const GET_EPISODES = \"GET_EPISODES\";\r\nexport const GET_EPISODE = \"GET_EPISODE\";\r\nexport const GET_LOCATIONS = \"GET_LOCATIONS\";\r\nexport const GET_LOCATION = \"GET_LOCATION\";\r\n\r\nexport const getCharacters = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(CHARACTERS_URL);\r\n\r\n      return dispatch({\r\n        type: GET_CHARACTERS,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getCharactersDetails = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(CHARACTERSID_URL + id);\r\n      return dispatch({\r\n        type: GET_CHARACTERS_DETAILS,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getCleanCharactersDetails = (id) => ({\r\n  type: GET_CLEAN_CHARACTERS_DETAILS,\r\n  payload: id,\r\n});\r\nexport const filterCharacters = () => ({});\r\n\r\nexport const getEpisodes = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(EPISODE_URL);\r\n      return dispatch({\r\n        type: GET_EPISODES,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getEpisode = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(\r\n        `https://rickandmortyapi.com/api/episode/${id}`\r\n      );\r\n      return dispatch({\r\n        type: GET_EPISODE,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getLocations = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(LOCATION_URL);\r\n\r\n      return dispatch({\r\n        type: GET_LOCATIONS,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getLocation = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      var json = await axios.get(\r\n        `https://rickandmortyapi.com/api/location/${id}`\r\n      );\r\n      return dispatch({\r\n        type: GET_LOCATION,\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","export const BASE_URL = \"http://localhost:3001/api/\";\r\n// export const BASE_PLATAFORMS = BASE_URL + \"platforms/plataforms\";\r\nexport const CHARACTERS_URL = BASE_URL + \"character/character\";\r\nexport const EPISODE_URL = BASE_URL + \"episode/episode/\";\r\nexport const LOCATION_URL = BASE_URL + \"location/location/\";\r\nexport const CHARACTERSID_URL = BASE_URL + \"character/character/\";\r\n// export const VIDEOGAME_CREATE_URL = BASE_URL + \"videogames/videogame\";\r\n// export const GENRES_URL = BASE_URL + \"genres/genres\";\r\n// export const IMAGES_URL = BASE_URL + \"image\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getEpisode, getCharacters } from \"../Redux/actions\";\r\nimport \"../styles/card.css\";\r\n\r\nconst CardsEpisode = (props) => {\r\n  const allCaracters = useSelector((state) => state.charactersLoad);\r\n  const dispatch = useDispatch();\r\n  const episode = useSelector((state) => state.episode);\r\n  let arrayCharacters = episode?.characters;\r\n  const history = useHistory();\r\n  const id = props.match.params.id;\r\n  useEffect(() => {\r\n    dispatch(getCharacters());\r\n    dispatch(getEpisode(id));\r\n  }, [dispatch, id]);\r\n\r\n  let idCaracters = arrayCharacters?.map((e) => {\r\n    if (e.length === 45) return e.slice(-3);\r\n    if (e.length === 44) return e.slice(-2);\r\n    if (e.length === 43) return e.slice(-1);\r\n    return e;\r\n  });\r\n\r\n  let filtrado = [];\r\n  if (idCaracters !== undefined) {\r\n    for (let i = 0; i < allCaracters.length; i++) {\r\n      for (let j = 0; j < idCaracters.length; j++) {\r\n        if (parseInt(idCaracters[i]) === allCaracters[i]?.id) {\r\n          filtrado.push(allCaracters[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  filtrado = filtrado.filter((ele, pos) => {\r\n    return filtrado.indexOf(ele) === pos;\r\n  });\r\n\r\n  let personaje = filtrado.map((e) => {\r\n    return (\r\n      <div className=\"card_body1\">\r\n        <div key={e.id} className=\"card_body1\">\r\n          <span className=\"card_nombre\">{e.name}</span>\r\n          <img src={e.image} alt={e.name} onClick={() => history.push(`/`)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  var countP = 10;\r\n  var totalCurrent = Math.ceil(personaje.length / countP);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [actualCurrent, setactualCurrent] = useState(1);\r\n\r\n  const nextPage = () => {\r\n    if (totalCurrent !== actualCurrent) {\r\n      setactualCurrent(actualCurrent + 1);\r\n      setCurrentPage(currentPage + countP);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (actualCurrent > 1) {\r\n      setactualCurrent(actualCurrent - 1);\r\n      setCurrentPage(currentPage - countP);\r\n    }\r\n  };\r\n\r\n  const show = () => {\r\n    if (actualCurrent === 1) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p>TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (actualCurrent >= totalCurrent) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {show()}\r\n      <div className=\"centar_episodes\">\r\n        <div>\r\n          <span className=\"card_nombre\">\r\n            {` episode ${episode?.id}  ${episode?.name}`}\r\n          </span>\r\n        </div>\r\n        <span className=\"card_nombre\">Click en la imagen para regresar</span>\r\n      </div>\r\n      <div className=\"card_body\">{personaje}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsEpisode;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getCharactersDetails } from \"../Redux/actions\";\r\nimport \"../styles/card.css\";\r\n\r\nconst Detail = (props) => {\r\n  const detailCaracter = useSelector((state) => state.characterDetail);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(getCharactersDetails(props.match.params.id));\r\n  }, [dispatch, props.match.params.id]);\r\n\r\n  const handleClik = (e) => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"cards_details\">\r\n      {detailCaracter.length > 0 ? (\r\n        <div className=\"cards_details_\">\r\n          <h2>\r\n            {\" \"}\r\n            <span>Name:</span> {detailCaracter[0].name}\r\n          </h2>\r\n          <div className=\"lista\">\r\n            <li className=\"description\">\r\n              <span>status:</span> {detailCaracter[0].status}\r\n            </li>\r\n            <li className=\"description\">\r\n              <span>species: </span>\r\n              {detailCaracter[0].species}\r\n            </li>\r\n            <li className=\"description\">\r\n              <span>type:</span> {detailCaracter[0].type}\r\n            </li>\r\n            <li className=\"description1\">\r\n              <span>location:</span> {detailCaracter[0].location}\r\n            </li>\r\n            <li className=\"description1\">\r\n              <span> Episodes: {detailCaracter[0].episode} </span>\r\n            </li>\r\n            <li className=\"description1\">\r\n              <span>Gender:</span> {detailCaracter[0].gender}\r\n            </li>\r\n            <span className=\"regresar\">Para regresar click en la imagen</span>\r\n          </div>\r\n          <img\r\n            className=\"image_detail\"\r\n            onClick={handleClik}\r\n            src={detailCaracter[0].image}\r\n            alt=\"img not found\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <p>landing...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getEpisodes } from \"../Redux/actions\";\r\nimport \"../styles/card.css\";\r\nconst Episodes = () => {\r\n  const allEpisodes = useSelector((state) => state.episodes);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getEpisodes());\r\n  }, [dispatch]);\r\n  const handleClik = (e) => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"episodios\">\r\n      <button onClick={handleClik}>Regresar</button>\r\n      <h3 className=\"Link_episodes_titulo\">Hacer click en el episodio</h3>\r\n      <div className=\"Episodios\">\r\n        {allEpisodes.map((episode) => (\r\n          <Link className=\"Link_episodes\" to={`/episode/${episode.id}`}>\r\n            <li key={episode.id} className=\"li_episodes\">\r\n              {`episodio ${episode.id} -  ${episode.name}`}\r\n            </li>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/card.css\";\r\n\r\nconst Card = ({ name, image, location, species, status, type, id, gender }) => {\r\n  return (\r\n    <div className=\"fondoCard\">\r\n      <div className=\"lista\">\r\n        <li>Name: {name}</li>\r\n        <li>species: {species}</li>\r\n        <li>location: {location}</li>\r\n        <li>status: {status}</li>\r\n        <li>type: {type}</li>\r\n        <li>gender: {gender}</li>\r\n        {/* <Link to={`/episode/${id}`}>\r\n          <li>Episode: {episode}</li>\r\n        </Link> */}\r\n      </div>\r\n      <Link to={`/home/${id}`} className=\"link_cards\">\r\n        <img src={image} alt=\"imag no fount\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/Lupa.70a30ce1.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\nimport { getCharacters } from \"../Redux/actions\";\r\nimport \"../imagenes/lupa.svg\";\r\nimport \"../styles/paginado.css\";\r\nimport \"../styles/home.css\";\r\nimport \"../styles/filtros.scss\";\r\nimport imagen from \"../imagenes/Lupa.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  var characterAll = useSelector((state) => state.charactersLoad);\r\n  // console.log(\"characterAll\", characterAll);\r\n  const dispatch = useDispatch();\r\n\r\n  /**Paginado */\r\n  var countP = 10;\r\n  var totalCurrent = Math.ceil(characterAll.length / countP);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [actualCurrent, setactualCurrent] = useState(1);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputRadio, setInputRadio] = useState(\"\");\r\n  const [inputRadioStatus, setInputRadioStatus] = useState(\"\");\r\n\r\n  const nextPage = () => {\r\n    if (totalCurrent !== actualCurrent) {\r\n      setactualCurrent(actualCurrent + 1);\r\n      setCurrentPage(currentPage + countP);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (actualCurrent > 1) {\r\n      setactualCurrent(actualCurrent - 1);\r\n      setCurrentPage(currentPage - countP);\r\n    }\r\n  };\r\n\r\n  const show = () => {\r\n    if (actualCurrent === 1) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p>TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (actualCurrent >= totalCurrent) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters()); //se hace un dispatch con la accion como parametro\r\n  }, [dispatch]);\r\n\r\n  //Filtrar por nombre de personaje\r\n  const filterData = () => {\r\n    if (inputName !== \"\") {\r\n      return characterAll.filter((e) =>\r\n        e.name.toLowerCase().includes(inputName.toLowerCase())\r\n      );\r\n    }\r\n    return characterAll;\r\n  };\r\n  const handleInput = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n  const handleRadiInput = (e) => {\r\n    setInputRadioStatus(\"\");\r\n    setInputRadio(e.target.name);\r\n  };\r\n\r\n  const handleRadiInputStatus = (e) => {\r\n    setInputRadio(\"\");\r\n    setInputRadioStatus(e.target.name);\r\n  };\r\n  const dataFilterEstadoGenero = () => {\r\n    if (inputRadio !== \"\") {\r\n      return filterData().filter((e) => e.gender.includes(inputRadio));\r\n    }\r\n\r\n    if (inputRadioStatus !== \"\") {\r\n      return filterData().filter((e) => e.status.includes(inputRadioStatus));\r\n    }\r\n    return filterData();\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"titulo\">\r\n        <h1>Rick and Morty</h1>\r\n      </div>\r\n      <div className=\"filtrar\">\r\n        <div className=\"select\">\r\n          <img className=\"lupa\" src={imagen} alt=\"imagen not fount\" />\r\n          <input\r\n            placeholder=\"Buscar\"\r\n            name=\"name\"\r\n            type=\"search\"\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div className=\"select\" tabIndex=\"1\">\r\n          Filtrar por Genero {inputRadio}\r\n          <div className=\"list\">\r\n            <label>\r\n              <input\r\n                className=\"search\"\r\n                type=\"radio\"\r\n                // id=\"select-radio1\"\r\n                name=\"Male\"\r\n                onChange={handleRadiInput}\r\n              />\r\n              Male\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"select-radio2\"\r\n                name=\"Female\"\r\n                onChange={handleRadiInput}\r\n              />\r\n              Female\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"select-radio3\"\r\n                name=\"unknown\"\r\n                onChange={handleRadiInput}\r\n              />\r\n              unknown\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"select\" tabIndex=\"2\">\r\n          Filtrar por Estado {inputRadioStatus}\r\n          <div className=\"list\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"select-radio4\"\r\n                name=\"Alive\"\r\n                onChange={handleRadiInputStatus}\r\n              />\r\n              Alive\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"select-radio5\"\r\n                name=\"Dead\"\r\n                onChange={handleRadiInputStatus}\r\n              />\r\n              Dead\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"select-radio6\"\r\n                name=\"unknown\"\r\n                onChange={handleRadiInputStatus}\r\n              />\r\n              unknown\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"episodes_location\">\r\n        <Link className=\"episodes_location_click\" to=\"/episode\">\r\n          <button className=\"episodes_location_button\">Episodios</button>\r\n        </Link>\r\n        <Link className=\"episodes_location_click\" to=\"/location\">\r\n          <button className=\"episodes_location_button\">Localización</button>\r\n        </Link>\r\n      </div>\r\n      {show()}\r\n      <div className=\"cards\">\r\n        {dataFilterEstadoGenero() &&\r\n          dataFilterEstadoGenero()\r\n            .map((ch) => (\r\n              <Card\r\n                id={ch.id}\r\n                name={ch.name}\r\n                image={ch.image}\r\n                location={ch.location}\r\n                species={ch.species}\r\n                status={ch.status}\r\n                type={ch.type}\r\n                gender={ch.gender}\r\n                episode={ch.episodes}\r\n                key={ch.id}\r\n              />\r\n            ))\r\n            .slice(currentPage, currentPage + countP)}\r\n      </div>\r\n      {show()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getLocation, getCharacters } from \"../Redux/actions\";\r\nimport \"../styles/card.css\";\r\n\r\nconst CardsEpisode = (props) => {\r\n  const allCaracters = useSelector((state) => state.charactersLoad);\r\n  const dispatch = useDispatch();\r\n  const location = useSelector((state) => state.location);\r\n  let arrayLocation = location?.residents;\r\n  const history = useHistory();\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters());\r\n    dispatch(getLocation(id));\r\n  }, [dispatch, id]);\r\n\r\n  let idLocation = arrayLocation?.map((e) => {\r\n    if (e.length === 46) return e.slice(-4);\r\n    if (e.length === 45) return e.slice(-3);\r\n    if (e.length === 44) return e.slice(-2);\r\n    return e.slice(-1);\r\n  });\r\n\r\n  let filtrado = [];\r\n  if (idLocation !== undefined) {\r\n    for (let i = 0; i < allCaracters.length; i++) {\r\n      for (let j = 0; j < idLocation.length; j++) {\r\n        if (parseInt(idLocation[j]) === allCaracters[i]?.id) {\r\n          filtrado.push(allCaracters[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  filtrado = filtrado.filter((ele, pos) => {\r\n    return filtrado.indexOf(ele) === pos;\r\n  });\r\n\r\n  let personaje = filtrado.map((e) => {\r\n    return (\r\n      <div className=\"card_body1\">\r\n        <div className=\"card_body1\" key={id}>\r\n          <span className=\"card_nombre\">{e.name}</span>\r\n          <img src={e.image} alt={e.name} onClick={() => history.push(`/`)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  var countP = 10;\r\n  var totalCurrent = Math.ceil(personaje.length / countP);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [actualCurrent, setactualCurrent] = useState(1);\r\n\r\n  const nextPage = () => {\r\n    if (totalCurrent !== actualCurrent) {\r\n      setactualCurrent(actualCurrent + 1);\r\n      setCurrentPage(currentPage + countP);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (actualCurrent > 1) {\r\n      setactualCurrent(actualCurrent - 1);\r\n      setCurrentPage(currentPage - countP);\r\n    }\r\n  };\r\n\r\n  const show = () => {\r\n    if (actualCurrent === 1) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p>TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (actualCurrent >= totalCurrent) {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"pagination\">\r\n          <p className=\"pagination-item \" onClick={prevPage}>\r\n            prev\r\n          </p>\r\n          <p className=\"pagination-item active\">{actualCurrent}</p>\r\n          <p className=\"to\">TO</p>\r\n          <p className=\"pagination-item \">{totalCurrent}</p>\r\n          <p className=\"pagination-item \" onClick={nextPage}>\r\n            next\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {show()}\r\n      <div className=\"centar_episodes\">\r\n        <button\r\n          className=\"episodes_location_click\"\r\n          onClick={() => history.push(`/location`)}\r\n        >\r\n          Regresar a la lista de Localización\r\n        </button>\r\n        <div>\r\n          <span className=\"card_nombre\">\r\n            {` Localización:  ${location?.name}`}\r\n          </span>\r\n        </div>\r\n        <span className=\"card_nombre\">Click en la imagen para regresar</span>\r\n      </div>\r\n      <div className=\"card_body\">{personaje}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsEpisode;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getLocations } from \"../Redux/actions\";\r\nimport \"../styles/card.css\";\r\n\r\nconst Location = () => {\r\n  const allLocations = useSelector((state) => state.locations);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLocations());\r\n  }, [dispatch]);\r\n  const handleClik = (e) => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"episodios\">\r\n      <button className=\"episodes_location_click_regresar\" onClick={handleClik}>\r\n        Regresar\r\n      </button>\r\n      <h3 className=\"h3_localizacion\">Hacer click en la Localización</h3>\r\n      <div className=\"Episodios\">\r\n        {allLocations.map((location) => (\r\n          <Link className=\"Link_episodes\" to={`/location/${location.id}`}>\r\n            <li className=\"li_episodes\">\r\n              {`Location ${location.id} -  ${location.name}`}\r\n            </li>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import { Route, BrowserRouter } from \"react-router-dom\";\r\nimport CardsEpisode from \"./components/CardsEpisode\";\r\nimport Detail from \"./components/Detail\";\r\nimport Episodes from \"./components/Episodes\";\r\nimport Home from \"./components/Home\";\r\nimport CardsLocalization from \"./components/CardsLocalization\";\r\nimport Location from \"./components/Location\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/home/:id\" exact component={Detail} />\r\n      <Route path=\"/episode\" exact component={Episodes} />\r\n      <Route path=\"/location\" exact component={Location} />\r\n      <Route path=\"/episode/:id\" exact component={CardsEpisode} />\r\n      <Route path=\"/location/:id\" exact component={CardsLocalization} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const {\r\n  GET_CHARACTERS,\r\n  GET_CHARACTERS_DETAILS,\r\n  GET_CLEAN_CHARACTERS_DETAILS,\r\n  GET_EPISODES,\r\n  GET_EPISODE,\r\n  GET_LOCATIONS,\r\n  GET_LOCATION,\r\n} = require(\"./actions\");\r\n\r\nconst inicialState = {\r\n  charactersLoad: [],\r\n  copiaCharactersLoad: [],\r\n  characterDetail: [],\r\n  episodes: [],\r\n  locations: [],\r\n  episode: {},\r\n  location: {},\r\n};\r\n\r\nfunction rootReducer(state = inicialState, action) {\r\n  switch (action.type) {\r\n    case GET_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        charactersLoad: action.payload,\r\n      };\r\n    case GET_CLEAN_CHARACTERS_DETAILS:\r\n      return {\r\n        ...state,\r\n        copiaCharactersLoad: action.payload,\r\n      };\r\n\r\n    case GET_CHARACTERS_DETAILS:\r\n      return {\r\n        ...state,\r\n        characterDetail: action.payload,\r\n      };\r\n    case GET_EPISODES:\r\n      return { ...state, episodes: action.payload };\r\n\r\n    case GET_EPISODE:\r\n      return {\r\n        ...state,\r\n        episode: action.payload,\r\n      };\r\n    case GET_LOCATIONS:\r\n      return { ...state, locations: action.payload };\r\n    case GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        location: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport rootReducer from \"../Redux/reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./Store/index\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}